498. Diagonal Traverse
=========================================================
Given a matrix of M x N elements (M rows, N columns), return all elements of the matrix in diagonal order as shown in the below image.
Example:
Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
Output:  [1,2,4,7,5,3,6,8,9]
Note:
The total number of elements of the given matrix will not exceed 10,000.
=========================================================
class Solution {
public:
    vector<int> findDiagonalOrder(vector<vector<int>>& matrix) {
        if(matrix.size() == 0) {
            vector<int> res ;
            return res;
        }
        int row = matrix[0].size(),cal = matrix.size() ;
        vector<int> res ;
        for(int i = 0; i < row + cal ; i++) {
            int lb = max(0,i-row+1) , ub = min(i,cal-1) ;
            if(i%2 == 0) {
                for(int j = ub ; j >= lb ; j-- ) {
                    res.push_back(matrix[j][i-j]) ;
                }
            }
                else {
                    for(int j =lb ; j <= ub ; j++) {
                        res.push_back(matrix[j][i-j]) ;
                    }
                }
            
            
        }
        
        return res ;
    }
};
========================================================